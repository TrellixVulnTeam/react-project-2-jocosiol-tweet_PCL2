{"version":3,"sources":["context/AppContext.js","lib/firebase.js","components/Navbar.js","components/Profile.js","components/Signup.js","components/Login.js","components/List.js","components/Form.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Navbar","appContext","useContext","history","useHistory","userLogin","auth","currentUser","displayName","email","photoURL","emailVerified","uid","push","className","user","to","onClick","signOut","then","console","log","setUser","catch","error","Profile","useState","loginUserEmail","setLoginUserEmail","uploadedPhoto","setUploadedPhoto","fileU","setFileU","urlPic","setUrlPic","onAuthStateChanged","setLoginUserDisplayName","setLoginUserId","handleChangeUser","e","setUserInput","target","value","setUserInputFilled","storage","ref","child","loginUserId","getDownloadURL","url","src","alt","loginUserDisplayName","type","onChange","placeholder","id","name","file","files","disabled","userInputFilled","updateProfile","userInput","put","Signup","formData","setFormData","isFormComplete","setIsFormComplete","showAlert","setShowAlert","handleInputPassword","useEffect","password","confirmPassword","createUserWithEmailAndPassword","userCredential","code","message","Login","signInWithEmailAndPassword","database","get","snapshot","errorCode","errorMessage","List","tweetArrayDB","setTweetArrayDB","exists","Object","values","val","orderedList","sort","a","b","Date","date","map","userName","content","Form","charLeft","length","setCarsLeft","setNoteInput","noteInput","alert","loadingActive","setLoadingActive","setTimeout","carsLeft","finalData","formatISO","setNotesArray","prevState","set","Home","location","useLocation","pathname","includes","setRedirect","setAlert","newFormData","App","notesArray","tweetsDB","setTweetsDB","redirect","loginUser","setLoginUser","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfd04713.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContext = React.createContext({});\n\nexport default AppContext;\n","\nimport firebase from \"firebase\";\n\n// Your web app's Firebase configuration\n const firebaseConfig = {\n    apiKey: \"AIzaSyAFT7q685FFGr5p6u3dQ-8TFTFZiTuj9a8\",\n    authDomain: \"tweet-react-project.firebaseapp.com\",\n    projectId: \"tweet-react-project\",\n    storageBucket: \"tweet-react-project.appspot.com\",\n    messagingSenderId: \"955900648748\",\n    appId: \"1:955900648748:web:96747dc87f364cf96ee089\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport { firebase as default };\n\n// Import the functions you need from the SDKs you need\n// import { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyAFT7q685FFGr5p6u3dQ-8TFTFZiTuj9a8\",\n//   authDomain: \"tweet-react-project.firebaseapp.com\",\n//   projectId: \"tweet-react-project\",\n//   storageBucket: \"tweet-react-project.appspot.com\",\n//   messagingSenderId: \"955900648748\",\n//   appId: \"1:955900648748:web:96747dc87f364cf96ee089\"\n// };\n\n// Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n","import \"../App.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nimport React, { useContext } from \"react\";\nimport firebase from \"../lib/firebase\";\n\nfunction Navbar() {\n  const appContext = useContext(AppContext);\n  const history = useHistory();\n\n  const userLogin = firebase.auth().currentUser;\n\n      if (userLogin !== null) {\n        // The userLogin object has basic properties such as display name, email, etc.\n        const displayName = userLogin.displayName;\n        const email = userLogin.email;\n        const photoURL = userLogin.photoURL;\n        const emailVerified = userLogin.emailVerified;\n    \n        // The user's ID, unique to the Firebase project. Do NOT use\n        // this value to authenticate with your backend server, if\n        // you have one. Use User.getToken() instead.\n        const uid = userLogin.uid;\n\n        // setLoginUserEmail(email);\n\n        //history.push(\"/profile\");\n      } else {\n        // User is signed out\n        // ...\n        history.push(\"/login\");\n      }\n\n  const handleLogout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        // Sign-out successful.\n        console.log(\"Sign-out successful\");\n        appContext.setUser(\"\");\n        history.push(\"/login\");\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n\n  return (\n    <div className=\"navbar-wrapper\">\n      <div className=\"navbar\">\n        <div className=\"navbar-left\">\n          {appContext.user && (\n            <div>\n              <Link className=\"navbar-option\" to=\"/\">\n                Home\n              </Link>\n            </div>\n          )}\n          {appContext.user && (\n            <div>\n              <Link className=\"navbar-option\" to=\"/profile\">\n                Profile\n              </Link>\n            </div>\n          )}\n        </div>\n        <div className=\"navbar-right\">\n          <div>\n            {!appContext.user && (\n              <Link className=\"navbar-option\" to=\"/login\">\n                Log in\n              </Link>\n            )}\n            {appContext.user && (\n              <div className=\"in-out-wrapper\">\n                <div className=\"navbar-option-unclick\" >\n                {`Welcome ${appContext.user}`}\n              </div>\n              <div className=\"navbar-option\" onClick={handleLogout}>\n                Log out\n              </div>\n              </div>\n            )}\n          </div>\n          <div>\n            {!appContext.user && (\n              <Link className=\"navbar-option\" to=\"/signup\">\n                Sign up\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n  //   }\n}\n\nexport default Navbar;\n","import \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport firebase from \"../lib/firebase\";\n\nfunction Profile() {\n  const appContext = useContext(AppContext);\n  const history = useHistory();\n\n  const [loginUserEmail, setLoginUserEmail] = useState();\n  // const [loginUserDisplayName, setLoginUserDisplayName] = useState();\n  // const [loginUserId, setLoginUserId] = useState();\n  const [loginUserPhotoURL, setLoginUserPhotoURL] = useState();\n  const [uploadedPhoto, setUploadedPhoto] = useState();\n  const [fileU, setFileU] = useState();\n  const [urlPic, setUrlPic] = useState();\n\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      setLoginUserEmail(user.email);\n      // ...\n    } else {\n      // User is signed out\n      // ...\n      history.push(\"/login\");\n    }\n\n    if (user !== null) {\n      // console.log(\"Sign-in provider: \" + user.providerId);\n      // console.log(\"  Provider-specific UID: \" + user.uid);\n      // console.log(\"  Name: \" + user.displayName);\n      // console.log(\"  Email: \" + user.email);\n      // console.log(\"  Photo URL: \" + user.photoURL);\n      appContext.setLoginUserDisplayName(user.displayName);\n      appContext.setLoginUserId(user.uid);\n      appContext.setUser(user.displayName);\n    }\n  });\n\n  const handleProfilePicture = (e) => {\n    let file = e.target.files[0];\n    setFileU(file);\n    console.log(file.name);\n    setUploadedPhoto(file.name);\n    appContext.setUserInputFilled(true);\n  };\n\n  const handleChangeUser = (e) => {\n    appContext.setUserInput(e.target.value);\n    appContext.setUserInputFilled(true);\n  };\n\n  const handleUserSubmit = () => {\n    //appContext.setUser(appContext.userInput);\n\n    const user = firebase.auth().currentUser;\n    user\n      .updateProfile({\n        displayName: appContext.userInput,\n        photoURL: appContext.loginUserId + \"/profilePicture/\" + uploadedPhoto,\n      })\n      .then(() => {\n        // Update successful\n        // ...\n        console.log(\"Update successful\");\n        \n        appContext.userInput && appContext.setUser(appContext.userInput)\n      })\n      .catch((error) => {\n        // An error occurred\n        // ...\n      });\n\n    // Create a Storage Ref w/ username\n    let storageRef = firebase\n      .storage()\n      .ref(appContext.loginUserId + \"/profilePic\");\n\n    // Upload file\n    let task = storageRef.put(fileU);\n\n    appContext.setUserInputFilled(false);\n    history.push(\"/\");\n  };\n\n  // firebase\n  //   .storage()\n  //   .ref(appContext.loginUserId)\n  //   //.child(appContext.loginUserId + \"/profilePicture/\" + uploadedPhoto)\n  //   .getDownloadURL()\n  //   .then((url) => {\n  //     console.log(url);\n  //   })\n  //   .catch((error) => {\n  //     // Handle any errors\n  //   });\n\n  if (!urlPic) {\n    let starsRef = firebase\n      .storage()\n      .ref()\n      .child(appContext.loginUserId + \"/profilePic\");\n\n    // Get the download URL\n    starsRef.getDownloadURL().then((url) => {\n      // Insert url into an <img> tag to \"download\"\n      //console.log(url)\n      setUrlPic(url);\n    });\n  }\n\n  return (\n    <div className=\"profile-wrapper\">\n      <div className=\"profile-left\"></div>\n      <div className=\"profile-container\">\n        <div className=\"img-cropper\">\n          {urlPic && \n            <img\n              className=\"profile-img\"\n              src={urlPic}\n              alt=\"Profile Picture\"\n            ></img>\n          }\n          {!urlPic && \n            <img\n              className=\"profile-img\"\n              src=\"/blank-profile.svg\"\n              alt=\"Profile Picture\"\n            ></img>\n          }\n        </div>\n        <div className=\"profile-title\">Profile</div>\n        <div className=\"profile-subtitle\">User Name</div>\n        {!appContext.loginUserDisplayName && (\n          <div>\n            <input\n              className=\"profile-input\"\n              type=\"text\"\n              onChange={handleChangeUser}\n              placeholder=\"Create a username\"\n            />\n          </div>\n        )}\n        {appContext.loginUserDisplayName && (\n          <div>\n            <input\n              className=\"profile-input\"\n              type=\"text\"\n              onChange={handleChangeUser}\n              placeholder={appContext.loginUserDisplayName}\n            />\n          </div>\n        )}\n        <div className=\"profile-subtitle\">Email</div>\n        <div>\n          <input className=\"profile-input\" type=\"text\" value={loginUserEmail} />\n        </div>\n        <div className=\"profile-subtitle\">Upload Profile's picture</div>\n        <div>\n          <input\n            type=\"file\"\n            id=\"myFile\"\n            name=\"filename\"\n            onChange={handleProfilePicture}\n          />\n        </div>\n\n        <div className=\"profile-button-cotainer\">\n          <button\n            disabled={!appContext.userInputFilled}\n            className={`submit-button-${!appContext.userInputFilled}`}\n            onClick={handleUserSubmit}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n      <div className=\"profile-right\"></div>\n    </div>\n  );\n}\n\nexport default Profile;\n","import \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport firebase from \"../lib/firebase\";\n\nfunction Signup() {\n  const appContext = useContext(AppContext);\n  const [formData, setFormData] = useState({});\n  const [isFormComplete, setIsFormComplete] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const history = useHistory();\n\n  const handleInputEmail = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n  const handleInputUsername = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n  const handleInputPassword = (e) => {\n    setShowAlert(true);\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  // useEffect(() => {\n  //   console.log(formData);\n  // }, [formData]);\n\n  useEffect(() => {\n    if (\n      formData.email &&\n      formData.password &&\n      formData.confirmPassword &&\n      formData.password === formData.confirmPassword\n      // maybe check for is it an actual email and also password strength\n    ) {\n      setIsFormComplete(true);\n    } else {\n      setIsFormComplete(false);\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    if (\n      formData.password !== formData.confirmPassword ||\n      !formData.password ||\n      !formData.confirmPassword\n    ) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [formData]);\n\n  const handleSubmit = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(formData.email, formData.password)\n      .then((userCredential) => {\n        // Signed in \n        let user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        let errorCode = error.code;\n        let errorMessage = error.message;\n        // ..\n      });\n\n      const userLogin = firebase.auth().currentUser;\n\n      if (userLogin !== null) {\n        // The userLogin object has basic properties such as display name, email, etc.\n        const displayName = userLogin.displayName;\n        const email = userLogin.email;\n        const photoURL = userLogin.photoURL;\n        const emailVerified = userLogin.emailVerified;\n    \n        // The user's ID, unique to the Firebase project. Do NOT use\n        // this value to authenticate with your backend server, if\n        // you have one. Use User.getToken() instead.\n        const uid = userLogin.uid;\n\n        // setLoginUserEmail(email);\n\n        history.push(\"/profile\");\n      } else {\n        // User is signed out\n        // ...\n        history.push(\"/login\");\n      }\n      \n    history.push(\"/profile\");\n  };\n\n  return (\n    <div className=\"profile-wrapper\">\n      <div className=\"profile-left\"></div>\n      <div className=\"profile-container\">\n        <div className=\"profile-title\">Sign up</div>\n        <div className=\"profile-subtitle\">Email</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"text\"\n            name={`email`}\n            onChange={handleInputEmail}\n          />\n        </div>\n        {/* <div className=\"profile-subtitle\">Username</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"text\"\n            name={`username`}\n            onChange={handleInputUsername}\n          />\n        </div> */}\n        <div className=\"profile-subtitle\">Password</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"password\"\n            name={`password`}\n            onChange={handleInputPassword}\n          />\n        </div>\n        <div className=\"profile-subtitle\">Confirm Password</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"password\"\n            name={`confirmPassword`}\n            onChange={handleInputPassword}\n          />{\" \"}\n        </div>\n        <div className=\"signup-button-cotainer\">\n          <button\n            disabled={!isFormComplete}\n            className={`submit-button-${!isFormComplete}`}\n            onClick={handleSubmit}\n          >\n            Sign up\n          </button>\n          {showAlert && (\n            <div className={`singup-error-${showAlert}`}>\n              Passwords must match\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"signup-right\"></div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport firebase from \"../lib/firebase\";\n\nfunction Login() {\n  const appContext = useContext(AppContext);\n  const history = useHistory();\n  const [formData, setFormData] = useState({});\n  const [isFormComplete, setIsFormComplete] = useState(false);\n\n  const handleChangeUserLogin = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleChangePassLogin = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  // useEffect(() => {\n  //   console.log(formData);\n  // }, [formData]);\n\n  useEffect(() => {\n    if (formData.email && formData.password) {\n      setIsFormComplete(true);\n    } else {\n      setIsFormComplete(false);\n    }\n  }, [formData]);\n\n  const handleLoginSubmit = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(formData.email, formData.password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        const dbRef = firebase.database().ref();\n        dbRef\n          .child(\"users\")\n          .child(user.uid)\n          .get()\n          .then((snapshot) => {\n            if (snapshot) {\n              //console.log(user);\n              //console.log(snapshot.val());\n              //appContext.setUser(snapshot.val().username);\n              appContext.setUser(user.displayName);\n              //setRedirect(\"/\");\n              history.push(\"/\");\n            } else {\n              console.log(\"No data available\");\n            }\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n        // ...\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n\n    //appContext.setUserInputFilled(false);\n  };\n\n  return (\n    <div className=\"profile-wrapper\">\n      <div className=\"profile-left\"></div>\n      <div className=\"profile-container\">\n        <div className=\"profile-title\">Log in</div>\n        <div className=\"profile-subtitle\">Email</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"text\"\n            name={`email`}\n            onChange={handleChangeUserLogin}\n          />\n        </div>\n        <div className=\"profile-subtitle\">Password</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"password\"\n            name={`password`}\n            onChange={handleChangePassLogin}\n          />\n        </div>\n        <div className=\"profile-button-cotainer\">\n          <button\n            disabled={!isFormComplete}\n            className={`submit-button-${!isFormComplete}`}\n            onClick={handleLoginSubmit}\n          >\n            Log in\n          </button>\n        </div>\n      </div>\n      <div className=\"profile-right\"></div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useContext, useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport AppContext from \"../context/AppContext\";\nimport firebase from \"../lib/firebase\";\n\nfunction List() {\n  const appContext = useContext(AppContext);\n  const [tweetArrayDB, setTweetArrayDB] = useState([]);\n\n  useEffect(() => {\n    // axios\n    //   .get(\n    //     \"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\"\n    //   )\n    //   .then((res) => {\n    //     appContext.setTweetsDB(res.data.tweets);\n    //   });\n\n    const dbRef = firebase.database().ref();\n    dbRef\n      .child(\"tweets\")\n      .get()\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          //console.log(snapshot.val());\n          //console.log(Object.values(snapshot.val()));\n\n          setTweetArrayDB(Object.values(snapshot.val()));\n        } else {\n          console.log(\"No data available\");\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  });\n\n  // useEffect(() => {\n  //   console.log(tweetArrayDB);\n  // }, [])\n\n  // setTweetArrayDB((prevState) => {\n  //   return [Object.values(value), ...prevState];\n  // });\n\n  let orderedList = tweetArrayDB.sort(function (a, b) {\n    return new Date(b.date) - new Date(a.date);\n  });\n\n  return (\n    <div className=\"list\">\n      {/* List */}\n      {orderedList.map((e) => {\n        return (\n          <div className=\"list_item\" key={e.id}>\n            <div className=\"list-item-data\">\n              <div>{e.userName}</div>\n              {<div>{e.date}</div>}\n            </div>\n            {<div className=\"list-item-tweet\">{e.content}</div>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default List;\n","import { useContext, useEffect } from \"react\";\nimport \"../App.css\";\nimport { formatISO } from \"date-fns\";\nimport axios from \"axios\";\nimport AppContext from \"../context/AppContext\";\nimport firebase from \"../lib/firebase\";\nimport cryptoRandomString from 'crypto-random-string';\n\n\n\nfunction Form() {\n  const appContext = useContext(AppContext);\n\n  const userLogin = firebase.auth().currentUser;\n\n  if (userLogin !== null) {\n    // The userLogin object has basic properties such as display name, email, etc.\n    const displayName = userLogin.displayName;\n    const email = userLogin.email;\n    const photoURL = userLogin.photoURL;\n    const emailVerified = userLogin.emailVerified;\n\n    // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n    const uid = userLogin.uid;\n    \n  }\n\n  const handleChangeNote = (e) => {\n    const charCount = e.target.value.length;\n    let charLeft = 140 - charCount;\n    appContext.setCarsLeft(charLeft);\n    appContext.setNoteInput(e.target.value);\n  };\n\n  // useEffect(() => {\n  //   console.log(appContext.carsLeft);\n  // }, [appContext.carsLeft]);\n\n  const handleSubmit = () => {\n    appContext.setIsFormComplete(false);\n    appContext.setLoadingActive(true);\n    setTimeout(() => {\n      if (appContext.carsLeft > 0) {\n        const finalData = appContext.formData;\n\n        finalData[\"date\"] = formatISO(new Date(), \"dd-MM-yyyy HH:mm:ss\");\n\n        appContext.setNotesArray((prevState) => {\n          return [finalData, ...prevState];\n        });\n\n        appContext.setNoteInput(\"\");\n        appContext.setFormData({});\n\n        //console.log(finalData);\n\n        const userLogin = firebase.auth().currentUser;\n        if (userLogin !== null) {\n          // The userLogin object has basic properties such as display name, email, etc.\n          const displayName = userLogin.displayName;\n          const email = userLogin.email;\n          const photoURL = userLogin.photoURL;\n          const emailVerified = userLogin.emailVerified;\n\n          // The user's ID, unique to the Firebase project. Do NOT use\n          // this value to authenticate with your backend server, if\n          // you have one. Use User.getToken() instead.\n          const uid = userLogin.uid;\n\n        \n\n          firebase\n          .database()\n          .ref(\"tweets/\" + userLogin.uid +\"_\"+ new Date())\n          .set(finalData);\n        }\n\n        // axios.post('https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet', finalData)\n        // .then(res => {\n        //   console.log(res);\n        // })\n        // .catch(err => {\n        //   console.error(err);\n        // })\n\n        // localStorage.setItem(finalData[\"id\"], JSON.stringify(finalData));\n        appContext.setLoadingActive(false);\n      }\n    }, 500);\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <textarea\n        className=\"tweet-form\"\n        onChange={handleChangeNote}\n        type=\"text\"\n        placeholder=\"What you have in mind...\"\n        value={appContext.noteInput}\n      />\n      <div className=\"tweet-bottom\">\n        <div>\n          <div className={`tweet-error-${appContext.alert}`}>\n            The tweet can't contain more then 140 chars.\n          </div>\n        </div>\n        <div> </div>\n        <div className=\"tweet-button\">\n          <img\n            className={`loading-${appContext.loadingActive}`}\n            src=\"/loadingLogo.svg\"\n            alt=\"loading\"\n          ></img>\n          <button\n            disabled={!appContext.isFormComplete}\n            className={`submit-button-${!appContext.isFormComplete} tweet`}\n            onClick={handleSubmit}\n          >\n            Tweet\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Form;\n","import React, { useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\nimport AppContext from \"./context/AppContext\";\nimport firebase from \"./lib/firebase\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nfunction Home() {\n  const appContext = useContext(AppContext);\n  const history = useHistory();\n  let location = useLocation();\n  \n\n  const userLogin = firebase.auth().currentUser;\n\n  if (userLogin !== null) {\n    // The userLogin object has basic properties such as display name, email, etc.\n    const displayName = userLogin.displayName;\n    const email = userLogin.email;\n    const photoURL = userLogin.photoURL;\n    const emailVerified = userLogin.emailVerified;\n\n    // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n    const uid = userLogin.uid;\n    \n  } else {\n    // User is signed out\n    // ...\n    history.push(\"/login\");\n  }\n\n  // useEffect(() => {\n  //   if (userLogin !== null){\n  //   console.log(userLogin.displayName, userLogin.email );\n  //   }\n  // }, [])\n  \n\n  useEffect(() => {\n    // After user logs in, get user object from successful login\n    if (!appContext.user) {\n      // do some user stuff\n      //console.log(appContext.user);\n      //console.log(location);\n      const pagePathname = location.pathname;\n      if (!pagePathname.includes(\"signup\")) {\n        appContext.setRedirect(\"/login\");\n      }\n    }\n    //console.log(appContext.redirect);\n  }, [appContext.user, location]);\n\n  useEffect(() => {\n    if (appContext.carsLeft < 0) {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(true);\n    } else if (appContext.formData && appContext.formData[\"content\"]) {\n      appContext.setIsFormComplete(true);\n      appContext.setAlert(false);\n    } else {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(false);\n    }\n  });\n\n  useEffect(() => {\n    const newFormData = {\n      content: appContext.noteInput,\n      // tweetId: cryptoRandomString({length: 10}),\n      //userName: appContext.loginUserDisplayName,\n      userName: appContext.user,\n    };\n\n    appContext.setFormData(newFormData);\n    // eslint-disable-next-line\n  }, [appContext.noteInput]);\n\n  return (\n    <div className=\"App\">\n      <Form />\n      <List />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Profile from \"./components/Profile\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Home from \"./Home\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport AppContext from \"./context/AppContext\";\n\nfunction App() {\n  const [user, setUser] = useState();\n  const [noteInput, setNoteInput] = useState();\n  const [formData, setFormData] = useState();\n  const [notesArray, setNotesArray] = useState([]);\n  const [isFormComplete, setIsFormComplete] = useState(false);\n  const [carsLeft, setCarsLeft] = useState(140);\n  const [alert, setAlert] = useState(false);\n  const [loadingActive, setLoadingActive] = useState(false);\n  const [userInput, setUserInput] = useState();\n  const [userInputFilled, setUserInputFilled] = useState(false);\n  const [tweetsDB, setTweetsDB] = useState([]);\n  const [redirect, setRedirect] = useState();\n  const [loginUser, setLoginUser] = useState();\n  const [loginUserDisplayName, setLoginUserDisplayName] = useState();\n  const [loginUserId, setLoginUserId] = useState();\n\n  return (\n    <AppContext.Provider\n      value={{\n        user: user,\n        setUser: setUser,\n        noteInput: noteInput,\n        setNoteInput: setNoteInput,\n        formData: formData,\n        setFormData: setFormData,\n        notesArray: notesArray,\n        setNotesArray: setNotesArray,\n        isFormComplete: isFormComplete,\n        setIsFormComplete: setIsFormComplete,\n        carsLeft: carsLeft,\n        setCarsLeft: setCarsLeft,\n        alert: alert,\n        setAlert: setAlert,\n        loadingActive: loadingActive,\n        setLoadingActive: setLoadingActive,\n        userInput: userInput,\n        setUserInput: setUserInput,\n        userInputFilled: userInputFilled,\n        setUserInputFilled: setUserInputFilled,\n        tweetsDB: tweetsDB,\n        setTweetsDB: setTweetsDB,\n        redirect: redirect,\n        setRedirect: setRedirect,\n        setLoginUser: setLoginUser,\n        loginUser: loginUser,\n        loginUserId: loginUserId,\n        setLoginUserId: setLoginUserId,\n        loginUserDisplayName: loginUserDisplayName,\n        setLoginUserDisplayName: setLoginUserDisplayName,\n      }}\n    >\n      <Router>\n        {/* {redirect && <Redirect to={redirect} />} */}\n        <div>\n          <div>\n            <Navbar />\n          </div>\n          <div>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/profile\">\n                <Profile />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/signup\">\n                <Signup />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}