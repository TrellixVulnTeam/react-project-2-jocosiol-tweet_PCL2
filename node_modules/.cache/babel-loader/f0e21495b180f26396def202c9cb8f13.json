{"ast":null,"code":"import React,{useContext,useEffect}from\"react\";import{useLocation}from\"react-router-dom\";import List from\"./components/List\";import Form from\"./components/Form\";import\"./App.css\";import AppContext from\"./context/AppContext\";import firebase from\"./lib/firebase\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){var appContext=useContext(AppContext);var history=useHistory();var location=useLocation();var userLogin=firebase.auth().currentUser;if(userLogin!==null){// The userLogin object has basic properties such as display name, email, etc.\nvar displayName=userLogin.displayName;var email=userLogin.email;var photoURL=userLogin.photoURL;var emailVerified=userLogin.emailVerified;// The user's ID, unique to the Firebase project. Do NOT use\n// this value to authenticate with your backend server, if\n// you have one. Use User.getToken() instead.\nvar uid=userLogin.uid;}else{// User is signed out\n// ...\nhistory.push(\"/login\");}// useEffect(() => {\n//   if (userLogin !== null){\n//   console.log(userLogin.displayName, userLogin.email );\n//   }\n// }, [])\nuseEffect(function(){// After user logs in, get user object from successful login\nif(!appContext.user){// do some user stuff\n//console.log(appContext.user);\n//console.log(location);\nvar pagePathname=location.pathname;if(!pagePathname.includes(\"signup\")){appContext.setRedirect(\"/login\");}}//console.log(appContext.redirect);\n},[appContext.user,location]);useEffect(function(){if(appContext.carsLeft<0){appContext.setIsFormComplete(false);appContext.setAlert(true);}else if(appContext.formData&&appContext.formData[\"content\"]){appContext.setIsFormComplete(true);appContext.setAlert(false);}else{appContext.setIsFormComplete(false);appContext.setAlert(false);}});useEffect(function(){var newFormData={content:appContext.noteInput,// tweetId: cryptoRandomString({length: 10}),\n//userName: appContext.loginUserDisplayName,\nuserName:appContext.user};appContext.setFormData(newFormData);// eslint-disable-next-line\n},[appContext.noteInput]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Form,{}),/*#__PURE__*/_jsx(List,{})]});}export default Home;","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/tweet-react-project/src/Home.js"],"names":["React","useContext","useEffect","useLocation","List","Form","AppContext","firebase","useHistory","Home","appContext","history","location","userLogin","auth","currentUser","displayName","email","photoURL","emailVerified","uid","push","user","pagePathname","pathname","includes","setRedirect","carsLeft","setIsFormComplete","setAlert","formData","newFormData","content","noteInput","userName","setFormData"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFAKA,QAASC,CAAAA,IAAT,EAAgB,CACd,GAAMC,CAAAA,UAAU,CAAGT,UAAU,CAACK,UAAD,CAA7B,CACA,GAAMK,CAAAA,OAAO,CAAGH,UAAU,EAA1B,CACA,GAAII,CAAAA,QAAQ,CAAGT,WAAW,EAA1B,CAGA,GAAMU,CAAAA,SAAS,CAAGN,QAAQ,CAACO,IAAT,GAAgBC,WAAlC,CAEA,GAAIF,SAAS,GAAK,IAAlB,CAAwB,CACtB;AACA,GAAMG,CAAAA,WAAW,CAAGH,SAAS,CAACG,WAA9B,CACA,GAAMC,CAAAA,KAAK,CAAGJ,SAAS,CAACI,KAAxB,CACA,GAAMC,CAAAA,QAAQ,CAAGL,SAAS,CAACK,QAA3B,CACA,GAAMC,CAAAA,aAAa,CAAGN,SAAS,CAACM,aAAhC,CAEA;AACA;AACA;AACA,GAAMC,CAAAA,GAAG,CAAGP,SAAS,CAACO,GAAtB,CAED,CAZD,IAYO,CACL;AACA;AACAT,OAAO,CAACU,IAAR,CAAa,QAAb,EACD,CAED;AACA;AACA;AACA;AACA;AAGAnB,SAAS,CAAC,UAAM,CACd;AACA,GAAI,CAACQ,UAAU,CAACY,IAAhB,CAAsB,CACpB;AACA;AACA;AACA,GAAMC,CAAAA,YAAY,CAAGX,QAAQ,CAACY,QAA9B,CACA,GAAI,CAACD,YAAY,CAACE,QAAb,CAAsB,QAAtB,CAAL,CAAsC,CACpCf,UAAU,CAACgB,WAAX,CAAuB,QAAvB,EACD,CACF,CACD;AACD,CAZQ,CAYN,CAAChB,UAAU,CAACY,IAAZ,CAAkBV,QAAlB,CAZM,CAAT,CAcAV,SAAS,CAAC,UAAM,CACd,GAAIQ,UAAU,CAACiB,QAAX,CAAsB,CAA1B,CAA6B,CAC3BjB,UAAU,CAACkB,iBAAX,CAA6B,KAA7B,EACAlB,UAAU,CAACmB,QAAX,CAAoB,IAApB,EACD,CAHD,IAGO,IAAInB,UAAU,CAACoB,QAAX,EAAuBpB,UAAU,CAACoB,QAAX,CAAoB,SAApB,CAA3B,CAA2D,CAChEpB,UAAU,CAACkB,iBAAX,CAA6B,IAA7B,EACAlB,UAAU,CAACmB,QAAX,CAAoB,KAApB,EACD,CAHM,IAGA,CACLnB,UAAU,CAACkB,iBAAX,CAA6B,KAA7B,EACAlB,UAAU,CAACmB,QAAX,CAAoB,KAApB,EACD,CACF,CAXQ,CAAT,CAaA3B,SAAS,CAAC,UAAM,CACd,GAAM6B,CAAAA,WAAW,CAAG,CAClBC,OAAO,CAAEtB,UAAU,CAACuB,SADF,CAElB;AACA;AACAC,QAAQ,CAAExB,UAAU,CAACY,IAJH,CAApB,CAOAZ,UAAU,CAACyB,WAAX,CAAuBJ,WAAvB,EACA;AACD,CAVQ,CAUN,CAACrB,UAAU,CAACuB,SAAZ,CAVM,CAAT,CAYA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,IAAD,IADF,cAEE,KAAC,IAAD,IAFF,GADF,CAMD,CAED,cAAexB,CAAAA,IAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\nimport AppContext from \"./context/AppContext\";\nimport firebase from \"./lib/firebase\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nfunction Home() {\n  const appContext = useContext(AppContext);\n  const history = useHistory();\n  let location = useLocation();\n  \n\n  const userLogin = firebase.auth().currentUser;\n\n  if (userLogin !== null) {\n    // The userLogin object has basic properties such as display name, email, etc.\n    const displayName = userLogin.displayName;\n    const email = userLogin.email;\n    const photoURL = userLogin.photoURL;\n    const emailVerified = userLogin.emailVerified;\n\n    // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n    const uid = userLogin.uid;\n    \n  } else {\n    // User is signed out\n    // ...\n    history.push(\"/login\");\n  }\n\n  // useEffect(() => {\n  //   if (userLogin !== null){\n  //   console.log(userLogin.displayName, userLogin.email );\n  //   }\n  // }, [])\n  \n\n  useEffect(() => {\n    // After user logs in, get user object from successful login\n    if (!appContext.user) {\n      // do some user stuff\n      //console.log(appContext.user);\n      //console.log(location);\n      const pagePathname = location.pathname;\n      if (!pagePathname.includes(\"signup\")) {\n        appContext.setRedirect(\"/login\");\n      }\n    }\n    //console.log(appContext.redirect);\n  }, [appContext.user, location]);\n\n  useEffect(() => {\n    if (appContext.carsLeft < 0) {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(true);\n    } else if (appContext.formData && appContext.formData[\"content\"]) {\n      appContext.setIsFormComplete(true);\n      appContext.setAlert(false);\n    } else {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(false);\n    }\n  });\n\n  useEffect(() => {\n    const newFormData = {\n      content: appContext.noteInput,\n      // tweetId: cryptoRandomString({length: 10}),\n      //userName: appContext.loginUserDisplayName,\n      userName: appContext.user,\n    };\n\n    appContext.setFormData(newFormData);\n    // eslint-disable-next-line\n  }, [appContext.noteInput]);\n\n  return (\n    <div className=\"App\">\n      <Form />\n      <List />\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}