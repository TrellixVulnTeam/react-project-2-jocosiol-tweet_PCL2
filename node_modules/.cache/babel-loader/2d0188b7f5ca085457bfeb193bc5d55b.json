{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from \"react\";\nimport \"../App.css\";\nimport { formatISO } from \"date-fns\";\nimport axios from \"axios\";\nimport AppContext from \"../context/AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const appContext = useContext(AppContext);\n\n  const handleChangeNote = e => {\n    const charCount = e.target.value.length;\n    let charLeft = 140 - charCount;\n    appContext.setCarsLeft(charLeft);\n    appContext.setNoteInput(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(appContext.carsLeft);\n  }, [appContext.carsLeft]);\n\n  const handleSubmit = () => {\n    appContext.setIsFormComplete(false);\n    appContext.setLoadingActive(true);\n    setTimeout(() => {\n      if (appContext.carsLeft > 0) {\n        const finalData = appContext.formData;\n        finalData[\"date\"] = formatISO(new Date(), \"dd-MM-yyyy HH:mm:ss\");\n        appContext.setNotesArray(prevState => {\n          return [finalData, ...prevState];\n        });\n        appContext.setNoteInput(\"\");\n        appContext.setFormData({});\n        console.log(finalData);\n        const userLogin = firebase.auth().currentUser;\n\n        if (userLogin !== null) {\n          // The userLogin object has basic properties such as display name, email, etc.\n          const displayName = userLogin.displayName;\n          const email = userLogin.email;\n          const photoURL = userLogin.photoURL;\n          const emailVerified = userLogin.emailVerified; // The user's ID, unique to the Firebase project. Do NOT use\n          // this value to authenticate with your backend server, if\n          // you have one. Use User.getToken() instead.\n\n          const uid = userLogin.uid;\n        } // axios.post('https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet', finalData)\n        // .then(res => {\n        //   console.log(res);\n        // })\n        // .catch(err => {\n        //   console.error(err);\n        // })\n        // localStorage.setItem(finalData[\"id\"], JSON.stringify(finalData));\n\n\n        appContext.setLoadingActive(false);\n      }\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"tweet-form\",\n      onChange: handleChangeNote,\n      type: \"text\",\n      placeholder: \"What you have in mind...\",\n      value: appContext.noteInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tweet-error-${appContext.alert}`,\n          children: \"The tweet can't contain more then 140 chars.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: `loading-${appContext.loadingActive}`,\n          src: \"/loadingLogo.svg\",\n          alt: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !appContext.isFormComplete,\n          className: `submit-button-${!appContext.isFormComplete} tweet`,\n          onClick: handleSubmit,\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"IRqG/3f4wGXHjd+ycNbawawQkFE=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/Form.js"],"names":["useContext","useEffect","formatISO","axios","AppContext","Form","appContext","handleChangeNote","e","charCount","target","value","length","charLeft","setCarsLeft","setNoteInput","console","log","carsLeft","handleSubmit","setIsFormComplete","setLoadingActive","setTimeout","finalData","formData","Date","setNotesArray","prevState","setFormData","userLogin","firebase","auth","currentUser","displayName","email","photoURL","emailVerified","uid","noteInput","alert","loadingActive","isFormComplete"],"mappings":"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","sourcesContent":["import { useContext, useEffect } from \"react\";\nimport \"../App.css\";\nimport { formatISO } from \"date-fns\";\nimport axios from \"axios\";\nimport AppContext from \"../context/AppContext\";\n\n\nfunction Form() {\n  const appContext = useContext(AppContext);\n\n\n  const handleChangeNote = (e) => {\n    const charCount = e.target.value.length;\n    let charLeft = 140 - charCount;\n    appContext.setCarsLeft(charLeft);\n    appContext.setNoteInput(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(appContext.carsLeft);\n  }, [appContext.carsLeft]);\n\n  const handleSubmit = () => {\n    \n    appContext.setIsFormComplete(false);\n    appContext.setLoadingActive(true);\n    setTimeout(() => {\n      if (appContext.carsLeft > 0) {\n        const finalData = appContext.formData;\n\n        finalData[\"date\"] = formatISO(new Date(), \"dd-MM-yyyy HH:mm:ss\");\n\n\n        appContext.setNotesArray((prevState) => {\n          return [finalData, ...prevState];\n        });\n\n        appContext.setNoteInput(\"\");\n        appContext.setFormData({});\n\n\n\n        console.log(finalData);\n\n\n        const userLogin = firebase.auth().currentUser;\n  if (userLogin !== null) {\n    // The userLogin object has basic properties such as display name, email, etc.\n    const displayName = userLogin.displayName;\n    const email = userLogin.email;\n    const photoURL = userLogin.photoURL;\n    const emailVerified = userLogin.emailVerified;\n\n    // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n    const uid = userLogin.uid;\n\n    \n  }\n\n        // axios.post('https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet', finalData)\n        // .then(res => {\n        //   console.log(res);\n        // })\n        // .catch(err => {\n        //   console.error(err);\n        // })\n\n\n        // localStorage.setItem(finalData[\"id\"], JSON.stringify(finalData));\n        appContext.setLoadingActive(false);\n      }\n    }, 500);\n  \n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <textarea\n        className=\"tweet-form\"\n        onChange={handleChangeNote}\n        type=\"text\"\n        placeholder=\"What you have in mind...\"\n        value={appContext.noteInput}\n      />\n      <div className=\"tweet-bottom\">\n        <div>\n          <div className={`tweet-error-${appContext.alert}`}>\n            The tweet can't contain more then 140 chars.\n          </div>\n        </div>\n        <div>  </div>\n        <div className=\"tweet-button\">\n        <img className={`loading-${appContext.loadingActive}`} src='/loadingLogo.svg' alt=\"loading\"></img>\n          <button\n            disabled={!appContext.isFormComplete}\n            className={`submit-button-${!appContext.isFormComplete} tweet`}\n            onClick={handleSubmit}\n          >\n            Tweet\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}