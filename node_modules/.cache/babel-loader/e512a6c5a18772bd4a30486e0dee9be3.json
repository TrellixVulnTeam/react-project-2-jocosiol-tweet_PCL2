{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/tweet-react-project/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\nimport AppContext from \"./context/AppContext\";\nimport firebase from \"./lib/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const appContext = useContext(AppContext);\n  let location = useLocation();\n  const {\n    currentUser\n  } = actualUser;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      return currentUser ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n  const userLogin = firebase.auth().currentUser;\n\n  if (userLogin !== null) {\n    // The userLogin object has basic properties such as display name, email, etc.\n    const displayName = userLogin.displayName;\n    const email = userLogin.email;\n    const photoURL = userLogin.photoURL;\n    const emailVerified = userLogin.emailVerified; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n\n    const uid = userLogin.uid;\n  }\n\n  useEffect(() => {\n    if (userLogin !== null) {\n      console.log(userLogin.displayName, userLogin.email);\n    }\n  }, []);\n  useEffect(() => {\n    // After user logs in, get user object from successful login\n    if (!appContext.user) {\n      // do some user stuff\n      console.log(appContext.user);\n      console.log(location);\n      const pagePathname = location.pathname;\n\n      if (!pagePathname.includes(\"signup\")) {\n        appContext.setRedirect(\"/login\");\n      }\n    }\n\n    console.log(appContext.redirect);\n  }, [appContext.user, location]);\n  useEffect(() => {\n    if (appContext.carsLeft < 0) {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(true);\n    } else if (appContext.formData && appContext.formData[\"content\"]) {\n      appContext.setIsFormComplete(true);\n      appContext.setAlert(false);\n    } else {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(false);\n    }\n  });\n  useEffect(() => {\n    const newFormData = {\n      content: appContext.noteInput,\n      userName: appContext.user\n    };\n    appContext.setFormData(newFormData); // eslint-disable-next-line\n  }, [appContext.noteInput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"3fpdqW83BJBfL7fd30mys4VA9Qk=\", false, function () {\n  return [useLocation];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/tweet-react-project/src/Home.js"],"names":["React","useContext","useEffect","useLocation","List","Form","AppContext","firebase","Home","appContext","location","currentUser","actualUser","rest","props","userLogin","auth","displayName","email","photoURL","emailVerified","uid","console","log","user","pagePathname","pathname","includes","setRedirect","redirect","carsLeft","setIsFormComplete","setAlert","formData","newFormData","content","noteInput","userName","setFormData"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\nimport AppContext from \"./context/AppContext\";\nimport firebase from \"./lib/firebase\";\n\n\nfunction Home() {\n  const appContext = useContext(AppContext);\n  let location = useLocation();\n\n  const { currentUser } = actualUser;\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    ></Route>\n  );\n\n  const userLogin = firebase.auth().currentUser;\n  if (userLogin !== null) {\n    // The userLogin object has basic properties such as display name, email, etc.\n    const displayName = userLogin.displayName;\n    const email = userLogin.email;\n    const photoURL = userLogin.photoURL;\n    const emailVerified = userLogin.emailVerified;\n\n    // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n    const uid = userLogin.uid;\n  }\n\n  useEffect(() => {\n    if (userLogin !== null){\n    console.log(userLogin.displayName, userLogin.email );\n    }\n  }, [])\n  \n\n  useEffect(() => {\n    // After user logs in, get user object from successful login\n    if (!appContext.user) {\n      // do some user stuff\n      console.log(appContext.user);\n      console.log(location);\n      const pagePathname = location.pathname;\n      if (!pagePathname.includes(\"signup\")) {\n        appContext.setRedirect(\"/login\");\n      }\n    }\n    console.log(appContext.redirect);\n  }, [appContext.user, location]);\n\n  useEffect(() => {\n    if (appContext.carsLeft < 0) {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(true);\n    } else if (appContext.formData && appContext.formData[\"content\"]) {\n      appContext.setIsFormComplete(true);\n      appContext.setAlert(false);\n    } else {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(false);\n    }\n  });\n\n  useEffect(() => {\n    const newFormData = {\n      content: appContext.noteInput,\n      userName: appContext.user,\n    };\n\n    appContext.setFormData(newFormData);\n    // eslint-disable-next-line\n  }, [appContext.noteInput]);\n\n  return (\n    <div className=\"App\">\n      <Form />\n      <List />\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}