{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/List.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport AppContext from \"../context/AppContext\";\nimport firebase from \"../lib/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const appContext = useContext(AppContext);\n  useEffect(() => {\n    // axios\n    //   .get(\n    //     \"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\"\n    //   )\n    //   .then((res) => {\n    //     appContext.setTweetsDB(res.data.tweets);\n    //   });\n    firebase.database().ref(\"firebase_basepath\" + \"users/\").on(\"value\", snapshot => {\n      console.log(\"FireB \", snapshot);\n\n      if (snapshot && snapshot.exists()) {//Set values in state which can be extracted in jsx in render.\n      }\n    });\n  });\n  let orderedList = appContext.tweetsDB.sort(function (a, b) {\n    return new Date(b.createdDate) - new Date(a.createdDate);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: orderedList.map(e => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list_item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: e.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: e.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item-tweet\",\n          children: e.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }, this)]\n      }, e.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"IRqG/3f4wGXHjd+ycNbawawQkFE=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/List.js"],"names":["useContext","useEffect","axios","AppContext","firebase","List","appContext","database","ref","on","snapshot","console","log","exists","orderedList","tweetsDB","sort","a","b","Date","createdDate","map","e","userName","date","content","id"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAMC,UAAU,GAAGN,UAAU,CAACG,UAAD,CAA7B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,IAAAA,QAAQ,CACLG,QADH,GAEGC,GAFH,CAEO,sBAAsB,QAF7B,EAGGC,EAHH,CAGM,OAHN,EAGgBC,QAAD,IAAc;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAtB;;AACA,UAAIA,QAAQ,IAAIA,QAAQ,CAACG,MAAT,EAAhB,EAAmC,CACjC;AACD;AACF,KARH;AASD,GAlBQ,CAAT;AAoBA,MAAIC,WAAW,GAAGR,UAAU,CAACS,QAAX,CAAoBC,IAApB,CAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACzD,WAAO,IAAIC,IAAJ,CAASD,CAAC,CAACE,WAAX,IAA0B,IAAID,IAAJ,CAASF,CAAC,CAACG,WAAX,CAAjC;AACD,GAFiB,CAAlB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cAEGN,WAAW,CAACO,GAAZ,CAAiBC,CAAD,IAAO;AACtB,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAA,sBAAMA,CAAC,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,kBADF,eAEG;AAAA,sBAAMD,CAAC,CAACE;AAAR;AAAA;AAAA;AAAA;AAAA,kBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKG;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBAAkCF,CAAC,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA,gBALH;AAAA,SAAgCH,CAAC,CAACI,EAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVA;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3CQrB,I;;KAAAA,I;AA6CT,eAAeA,IAAf","sourcesContent":["import { useContext, useEffect } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport AppContext from \"../context/AppContext\";\nimport firebase from \"../lib/firebase\";\n\nfunction List() {\n  const appContext = useContext(AppContext);\n\n  useEffect(() => {\n    // axios\n    //   .get(\n    //     \"https://micro-blogging-dot-full-stack-course-services.ew.r.appspot.com/tweet\"\n    //   )\n    //   .then((res) => {\n    //     appContext.setTweetsDB(res.data.tweets);\n    //   });\n\n    firebase\n      .database()\n      .ref(\"firebase_basepath\" + \"users/\")\n      .on(\"value\", (snapshot) => {\n        console.log(\"FireB \", snapshot);\n        if (snapshot && snapshot.exists()) {\n          //Set values in state which can be extracted in jsx in render.\n        }\n      });\n  });\n\n  let orderedList = appContext.tweetsDB.sort(function (a, b) {\n    return new Date(b.createdDate) - new Date(a.createdDate);\n  });\n\n  return (\n    <div className=\"list\">\n      {/* List */}\n      {orderedList.map((e) => {\n        return (\n          <div className=\"list_item\" key={e.id}>\n            <div className=\"list-item-data\">\n              <div>{e.userName}</div>\n              {<div>{e.date}</div>}\n            </div>\n            {<div className=\"list-item-tweet\">{e.content}</div>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}