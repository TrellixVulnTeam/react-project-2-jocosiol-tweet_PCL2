{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nimport firebase from \"../lib/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const user = firebase.auth().currentUser;\n  const [actualUser, setActualUser] = useState();\n\n  if (user) {\n    // User is signed in, see docs for a list of available properties\n    // https://firebase.google.com/docs/reference/js/firebase.User\n    // ...\n    setActualUser(user);\n  } else {// No user is signed in.\n  }\n\n  const {\n    currentUser\n  } = actualUser;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      return currentUser ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrivateRoute, \"jWEhnpNlXlqGuZA8q9fVzZnReGA=\");\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/PrivateRoute.js"],"names":["React","useContext","useState","Route","Redirect","AppContext","firebase","PrivateRoute","component","Component","rest","user","auth","currentUser","actualUser","setActualUser","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAGA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AAAA;;AAEtE,QAAMC,IAAI,GAAGL,QAAQ,CAACM,IAAT,GAAgBC,WAA7B;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,EAA5C;;AAEF,MAAIS,IAAJ,EAAU;AACR;AACA;AACA;AACAI,IAAAA,aAAa,CAACJ,IAAD,CAAb;AACD,GALD,MAKO,CACL;AACD;;AAEC,QAAM;AAAEE,IAAAA;AAAF,MAAkBC,UAAxB;AACA,sBACE,QAAC,KAAD,OACMJ,IADN;AAEE,IAAA,MAAM,EAAGM,KAAD,IAAW;AACjB,aAAOH,WAAW,gBAChB,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,cADgB,gBAGhB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAHF;AAKD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA5BuBT,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nimport firebase from \"../lib/firebase\";\n\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n\n  const user = firebase.auth().currentUser;\n\n  const [actualUser, setActualUser] = useState();\n\nif (user) {\n  // User is signed in, see docs for a list of available properties\n  // https://firebase.google.com/docs/reference/js/firebase.User\n  // ...\n  setActualUser(user);\n} else {\n  // No user is signed in.\n}\n\n  const { currentUser } = actualUser;\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    ></Route>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}