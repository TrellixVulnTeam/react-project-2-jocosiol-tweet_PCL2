{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport firebase from \"../lib/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const appContext = useContext(AppContext);\n  const [formData, setFormData] = useState({});\n  const [isFormComplete, setIsFormComplete] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const history = useHistory();\n\n  const handleInputEmail = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleInputUsername = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleInputPassword = e => {\n    setShowAlert(true);\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }; // useEffect(() => {\n  //   console.log(formData);\n  // }, [formData]);\n\n\n  useEffect(() => {\n    if (formData.email && formData.password && formData.confirmPassword && formData.password === formData.confirmPassword // maybe check for is it an actual email and also password strength\n    ) {\n      setIsFormComplete(true);\n    } else {\n      setIsFormComplete(false);\n    }\n  }, [formData]);\n  useEffect(() => {\n    if (formData.password !== formData.confirmPassword || !formData.password || !formData.confirmPassword) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [formData]);\n\n  const handleSubmit = () => {\n    firebase.auth().createUserWithEmailAndPassword(formData.email, formData.password).then(userCredential => {\n      // Signed in \n      let user = userCredential.user; // ...\n    }).catch(error => {\n      let errorCode = error.code;\n      let errorMessage = error.message; // ..\n    });\n    const userLogin = firebase.auth().currentUser;\n\n    if (userLogin !== null) {\n      // The userLogin object has basic properties such as display name, email, etc.\n      const displayName = userLogin.displayName;\n      const email = userLogin.email;\n      const photoURL = userLogin.photoURL;\n      const emailVerified = userLogin.emailVerified; // The user's ID, unique to the Firebase project. Do NOT use\n      // this value to authenticate with your backend server, if\n      // you have one. Use User.getToken() instead.\n\n      const uid = userLogin.uid;\n      setLoginUserEmail(user.email);\n    } else {\n      // User is signed out\n      // ...\n      history.push(\"/login\");\n    }\n\n    history.push(\"/profile\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-title\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-subtitle\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"profile-input\",\n          type: \"text\",\n          name: `email`,\n          onChange: handleInputEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-subtitle\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"profile-input\",\n          type: \"password\",\n          name: `password`,\n          onChange: handleInputPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-subtitle\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"profile-input\",\n          type: \"password\",\n          name: `confirmPassword`,\n          onChange: handleInputPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-button-cotainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !isFormComplete,\n          className: `submit-button-${!isFormComplete}`,\n          onClick: handleSubmit,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `singup-error-${showAlert}`,\n          children: \"Passwords must match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"F8qv8Z6MtPqQoV0i8v3KUZjucQU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/Signup.js"],"names":["useHistory","AppContext","useContext","useState","useEffect","firebase","Signup","appContext","formData","setFormData","isFormComplete","setIsFormComplete","showAlert","setShowAlert","history","handleInputEmail","e","name","target","value","handleInputUsername","handleInputPassword","email","password","confirmPassword","handleSubmit","auth","createUserWithEmailAndPassword","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","userLogin","currentUser","displayName","photoURL","emailVerified","uid","setLoginUserEmail","push"],"mappings":"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","sourcesContent":["import \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport firebase from \"../lib/firebase\";\n\nfunction Signup() {\n  const appContext = useContext(AppContext);\n  const [formData, setFormData] = useState({});\n  const [isFormComplete, setIsFormComplete] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const history = useHistory();\n\n  const handleInputEmail = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n  const handleInputUsername = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n  const handleInputPassword = (e) => {\n    setShowAlert(true);\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  // useEffect(() => {\n  //   console.log(formData);\n  // }, [formData]);\n\n  useEffect(() => {\n    if (\n      formData.email &&\n      formData.password &&\n      formData.confirmPassword &&\n      formData.password === formData.confirmPassword\n      // maybe check for is it an actual email and also password strength\n    ) {\n      setIsFormComplete(true);\n    } else {\n      setIsFormComplete(false);\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    if (\n      formData.password !== formData.confirmPassword ||\n      !formData.password ||\n      !formData.confirmPassword\n    ) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [formData]);\n\n  const handleSubmit = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(formData.email, formData.password)\n      .then((userCredential) => {\n        // Signed in \n        let user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        let errorCode = error.code;\n        let errorMessage = error.message;\n        // ..\n      });\n\n      const userLogin = firebase.auth().currentUser;\n\n      if (userLogin !== null) {\n        // The userLogin object has basic properties such as display name, email, etc.\n        const displayName = userLogin.displayName;\n        const email = userLogin.email;\n        const photoURL = userLogin.photoURL;\n        const emailVerified = userLogin.emailVerified;\n    \n        // The user's ID, unique to the Firebase project. Do NOT use\n        // this value to authenticate with your backend server, if\n        // you have one. Use User.getToken() instead.\n        const uid = userLogin.uid;\n\n        setLoginUserEmail(user.email);\n\n        \n      } else {\n        // User is signed out\n        // ...\n        history.push(\"/login\");\n      }\n      \n    history.push(\"/profile\");\n  };\n\n  return (\n    <div className=\"profile-wrapper\">\n      <div className=\"profile-left\"></div>\n      <div className=\"profile-container\">\n        <div className=\"profile-title\">Sign up</div>\n        <div className=\"profile-subtitle\">Email</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"text\"\n            name={`email`}\n            onChange={handleInputEmail}\n          />\n        </div>\n        {/* <div className=\"profile-subtitle\">Username</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"text\"\n            name={`username`}\n            onChange={handleInputUsername}\n          />\n        </div> */}\n        <div className=\"profile-subtitle\">Password</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"password\"\n            name={`password`}\n            onChange={handleInputPassword}\n          />\n        </div>\n        <div className=\"profile-subtitle\">Confirm Password</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"password\"\n            name={`confirmPassword`}\n            onChange={handleInputPassword}\n          />{\" \"}\n        </div>\n        <div className=\"signup-button-cotainer\">\n          <button\n            disabled={!isFormComplete}\n            className={`submit-button-${!isFormComplete}`}\n            onClick={handleSubmit}\n          >\n            Sign up\n          </button>\n          {showAlert && (\n            <div className={`singup-error-${showAlert}`}>\n              Passwords must match\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"signup-right\"></div>\n    </div>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}