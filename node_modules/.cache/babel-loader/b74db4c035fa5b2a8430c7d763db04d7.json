{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/tweet-react-project/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\nimport AppContext from \"./context/AppContext\";\nimport firebase from \"./lib/firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const appContext = useContext(AppContext);\n  const history = useHistory();\n  let location = useLocation();\n  const userLogin = firebase.auth().currentUser;\n\n  if (userLogin !== null) {\n    // The userLogin object has basic properties such as display name, email, etc.\n    const displayName = userLogin.displayName;\n    const email = userLogin.email;\n    const photoURL = userLogin.photoURL;\n    const emailVerified = userLogin.emailVerified; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n\n    const uid = userLogin.uid;\n  } else {\n    // User is signed out\n    // ...\n    history.push(\"/login\");\n  } // useEffect(() => {\n  //   if (userLogin !== null){\n  //   console.log(userLogin.displayName, userLogin.email );\n  //   }\n  // }, [])\n\n\n  useEffect(() => {\n    // After user logs in, get user object from successful login\n    if (!appContext.user) {\n      // do some user stuff\n      //console.log(appContext.user);\n      //console.log(location);\n      const pagePathname = location.pathname;\n\n      if (!pagePathname.includes(\"signup\")) {\n        appContext.setRedirect(\"/login\");\n      }\n    } //console.log(appContext.redirect);\n\n  }, [appContext.user, location]);\n  useEffect(() => {\n    if (appContext.carsLeft < 0) {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(true);\n    } else if (appContext.formData && appContext.formData[\"content\"]) {\n      appContext.setIsFormComplete(true);\n      appContext.setAlert(false);\n    } else {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(false);\n    }\n  });\n  useEffect(() => {\n    const newFormData = {\n      content: appContext.noteInput,\n      // tweetId: cryptoRandomString({length: 10}),\n      //userName: appContext.loginUserDisplayName,\n      userName: appContext.user\n    };\n    appContext.setFormData(newFormData); // eslint-disable-next-line\n  }, [appContext.noteInput]); // \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: items.length //This is important field to render the next data\n      ,\n      next: fetchData,\n      hasMore: true,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this),\n      endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Yay! You have seen it all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"X/o8j4ZzlZggTBC0YfRRcwcfn/0=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/tweet-react-project/src/Home.js"],"names":["React","useContext","useEffect","useLocation","List","Form","AppContext","firebase","useHistory","InfiniteScroll","Home","appContext","history","location","userLogin","auth","currentUser","displayName","email","photoURL","emailVerified","uid","push","user","pagePathname","pathname","includes","setRedirect","carsLeft","setIsFormComplete","setAlert","formData","newFormData","content","noteInput","userName","setFormData","items","length","fetchData","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\nimport AppContext from \"./context/AppContext\";\nimport firebase from \"./lib/firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\n\n\n\nfunction Home() {\n  const appContext = useContext(AppContext);\n  const history = useHistory();\n  let location = useLocation();\n  \n\n  const userLogin = firebase.auth().currentUser;\n\n  if (userLogin !== null) {\n    // The userLogin object has basic properties such as display name, email, etc.\n    const displayName = userLogin.displayName;\n    const email = userLogin.email;\n    const photoURL = userLogin.photoURL;\n    const emailVerified = userLogin.emailVerified;\n\n    // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n    const uid = userLogin.uid;\n    \n  } else {\n    // User is signed out\n    // ...\n    history.push(\"/login\");\n  }\n\n  // useEffect(() => {\n  //   if (userLogin !== null){\n  //   console.log(userLogin.displayName, userLogin.email );\n  //   }\n  // }, [])\n  \n\n  useEffect(() => {\n    // After user logs in, get user object from successful login\n    if (!appContext.user) {\n      // do some user stuff\n      //console.log(appContext.user);\n      //console.log(location);\n      const pagePathname = location.pathname;\n      if (!pagePathname.includes(\"signup\")) {\n        appContext.setRedirect(\"/login\");\n      }\n    }\n    //console.log(appContext.redirect);\n  }, [appContext.user, location]);\n\n  useEffect(() => {\n    if (appContext.carsLeft < 0) {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(true);\n    } else if (appContext.formData && appContext.formData[\"content\"]) {\n      appContext.setIsFormComplete(true);\n      appContext.setAlert(false);\n    } else {\n      appContext.setIsFormComplete(false);\n      appContext.setAlert(false);\n    }\n  });\n\n  useEffect(() => {\n    const newFormData = {\n      content: appContext.noteInput,\n      // tweetId: cryptoRandomString({length: 10}),\n      //userName: appContext.loginUserDisplayName,\n      userName: appContext.user,\n    };\n\n    appContext.setFormData(newFormData);\n    // eslint-disable-next-line\n  }, [appContext.noteInput]);\n\n// \n\n  \n\n\n  return (\n    <div className=\"App\">\n      <Form />\n      <InfiniteScroll\n  dataLength={items.length} //This is important field to render the next data\n  next={fetchData}\n  hasMore={true}\n  loader={<h4>Loading...</h4>}\n  endMessage={\n    <p style={{ textAlign: 'center' }}>\n      <b>Yay! You have seen it all</b>\n    </p>\n  }>\n      <List />\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}