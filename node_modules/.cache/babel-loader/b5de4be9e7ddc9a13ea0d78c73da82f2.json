{"ast":null,"code":"import _defineProperty from\"/Users/javiercosio/Documents/ITC/tweet-react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/javiercosio/Documents/ITC/tweet-react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/javiercosio/Documents/ITC/tweet-react-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"../App.css\";import{useHistory}from\"react-router-dom\";import AppContext from\"../context/AppContext\";import{useContext,useState,useEffect}from\"react\";import firebase from\"../lib/firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Signup(){var appContext=useContext(AppContext);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isFormComplete=_useState4[0],setIsFormComplete=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showAlert=_useState6[0],setShowAlert=_useState6[1];var history=useHistory();var handleInputEmail=function handleInputEmail(e){var name=e.target.name;var value=e.target.value;setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},name,value)));};var handleInputUsername=function handleInputUsername(e){var name=e.target.name;var value=e.target.value;setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},name,value)));};var handleInputPassword=function handleInputPassword(e){setShowAlert(true);var name=e.target.name;var value=e.target.value;setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},name,value)));};// useEffect(() => {\n//   console.log(formData);\n// }, [formData]);\nuseEffect(function(){if(formData.email&&formData.password&&formData.confirmPassword&&formData.password===formData.confirmPassword// maybe check for is it an actual email and also password strength\n){setIsFormComplete(true);}else{setIsFormComplete(false);}},[formData]);useEffect(function(){if(formData.password!==formData.confirmPassword||!formData.password||!formData.confirmPassword){setShowAlert(true);}else{setShowAlert(false);}},[formData]);var handleSubmit=function handleSubmit(){firebase.auth().createUserWithEmailAndPassword(formData.email,formData.password).then(function(userCredential){// Signed in \nvar user=userCredential.user;// ...\n}).catch(function(error){var errorCode=error.code;var errorMessage=error.message;// ..\n});var userLogin=firebase.auth().currentUser;if(userLogin!==null){// The userLogin object has basic properties such as display name, email, etc.\nvar displayName=userLogin.displayName;var email=userLogin.email;var photoURL=userLogin.photoURL;var emailVerified=userLogin.emailVerified;// The user's ID, unique to the Firebase project. Do NOT use\n// this value to authenticate with your backend server, if\n// you have one. Use User.getToken() instead.\nvar uid=userLogin.uid;// setLoginUserEmail(email);\nhistory.push(\"/profile\");}else{// User is signed out\n// ...\nhistory.push(\"/login\");}history.push(\"/profile\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-left\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-title\",children:\"Sign up\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-subtitle\",children:\"Email\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{className:\"profile-input\",type:\"text\",name:\"email\",onChange:handleInputEmail})}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-subtitle\",children:\"Password\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{className:\"profile-input\",type:\"password\",name:\"password\",onChange:handleInputPassword})}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-subtitle\",children:\"Confirm Password\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:\"profile-input\",type:\"password\",name:\"confirmPassword\",onChange:handleInputPassword}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"signup-button-cotainer\",children:[/*#__PURE__*/_jsx(\"button\",{disabled:!isFormComplete,className:\"submit-button-\".concat(!isFormComplete),onClick:handleSubmit,children:\"Sign up\"}),showAlert&&/*#__PURE__*/_jsx(\"div\",{className:\"singup-error-\".concat(showAlert),children:\"Passwords must match\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"signup-right\"})]});}export default Signup;","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/Signup.js"],"names":["useHistory","AppContext","useContext","useState","useEffect","firebase","Signup","appContext","formData","setFormData","isFormComplete","setIsFormComplete","showAlert","setShowAlert","history","handleInputEmail","e","name","target","value","handleInputUsername","handleInputPassword","email","password","confirmPassword","handleSubmit","auth","createUserWithEmailAndPassword","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","userLogin","currentUser","displayName","photoURL","emailVerified","uid","push"],"mappings":"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","sourcesContent":["import \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContext from \"../context/AppContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport firebase from \"../lib/firebase\";\n\nfunction Signup() {\n  const appContext = useContext(AppContext);\n  const [formData, setFormData] = useState({});\n  const [isFormComplete, setIsFormComplete] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const history = useHistory();\n\n  const handleInputEmail = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n  const handleInputUsername = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n  const handleInputPassword = (e) => {\n    setShowAlert(true);\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  // useEffect(() => {\n  //   console.log(formData);\n  // }, [formData]);\n\n  useEffect(() => {\n    if (\n      formData.email &&\n      formData.password &&\n      formData.confirmPassword &&\n      formData.password === formData.confirmPassword\n      // maybe check for is it an actual email and also password strength\n    ) {\n      setIsFormComplete(true);\n    } else {\n      setIsFormComplete(false);\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    if (\n      formData.password !== formData.confirmPassword ||\n      !formData.password ||\n      !formData.confirmPassword\n    ) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [formData]);\n\n  const handleSubmit = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(formData.email, formData.password)\n      .then((userCredential) => {\n        // Signed in \n        let user = userCredential.user;\n        // ...\n      })\n      .catch((error) => {\n        let errorCode = error.code;\n        let errorMessage = error.message;\n        // ..\n      });\n\n      const userLogin = firebase.auth().currentUser;\n\n      if (userLogin !== null) {\n        // The userLogin object has basic properties such as display name, email, etc.\n        const displayName = userLogin.displayName;\n        const email = userLogin.email;\n        const photoURL = userLogin.photoURL;\n        const emailVerified = userLogin.emailVerified;\n    \n        // The user's ID, unique to the Firebase project. Do NOT use\n        // this value to authenticate with your backend server, if\n        // you have one. Use User.getToken() instead.\n        const uid = userLogin.uid;\n\n        // setLoginUserEmail(email);\n\n        history.push(\"/profile\");\n      } else {\n        // User is signed out\n        // ...\n        history.push(\"/login\");\n      }\n      \n    history.push(\"/profile\");\n  };\n\n  return (\n    <div className=\"profile-wrapper\">\n      <div className=\"profile-left\"></div>\n      <div className=\"profile-container\">\n        <div className=\"profile-title\">Sign up</div>\n        <div className=\"profile-subtitle\">Email</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"text\"\n            name={`email`}\n            onChange={handleInputEmail}\n          />\n        </div>\n        {/* <div className=\"profile-subtitle\">Username</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"text\"\n            name={`username`}\n            onChange={handleInputUsername}\n          />\n        </div> */}\n        <div className=\"profile-subtitle\">Password</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"password\"\n            name={`password`}\n            onChange={handleInputPassword}\n          />\n        </div>\n        <div className=\"profile-subtitle\">Confirm Password</div>\n        <div>\n          <input\n            className=\"profile-input\"\n            type=\"password\"\n            name={`confirmPassword`}\n            onChange={handleInputPassword}\n          />{\" \"}\n        </div>\n        <div className=\"signup-button-cotainer\">\n          <button\n            disabled={!isFormComplete}\n            className={`submit-button-${!isFormComplete}`}\n            onClick={handleSubmit}\n          >\n            Sign up\n          </button>\n          {showAlert && (\n            <div className={`singup-error-${showAlert}`}>\n              Passwords must match\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"signup-right\"></div>\n    </div>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}