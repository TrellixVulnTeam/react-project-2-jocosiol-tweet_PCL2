{"ast":null,"code":"var _jsxFileName = \"/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport firebase from \"../lib/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const user = firebase.auth().currentUser;\n  const [actualUser, setActualUser] = useState();\n\n  if (user) {\n    // User is signed in, see docs for a list of available properties\n    // https://firebase.google.com/docs/reference/js/firebase.User\n    // ...\n    setActualUser(user);\n    const {\n      currentUser\n    } = actualUser;\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => {\n        return currentUser ? /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this);\n  } else {// No user is signed in.\n  }\n}\n\n_s(PrivateRoute, \"jWEhnpNlXlqGuZA8q9fVzZnReGA=\");\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/javiercosio/Documents/ITC/tweet-react-project/src/components/PrivateRoute.js"],"names":["React","useState","Route","Redirect","firebase","PrivateRoute","component","Component","rest","user","auth","currentUser","actualUser","setActualUser","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAGA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AAAA;;AAEtE,QAAMC,IAAI,GAAGL,QAAQ,CAACM,IAAT,GAAgBC,WAA7B;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,EAA5C;;AAEF,MAAIQ,IAAJ,EAAU;AACR;AACA;AACA;AACAI,IAAAA,aAAa,CAACJ,IAAD,CAAb;AAEA,UAAM;AAAEE,MAAAA;AAAF,QAAkBC,UAAxB;AACA,wBACE,QAAC,KAAD,OACMJ,IADN;AAEE,MAAA,MAAM,EAAGM,KAAD,IAAW;AACjB,eAAOH,WAAW,gBAChB,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,gBADgB,gBAGhB,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHF;AAKD;AARH;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAnBD,MAmBO,CACL;AACD;AAGA;;GA9BuBT,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport firebase from \"../lib/firebase\";\n\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n\n  const user = firebase.auth().currentUser;\n\n  const [actualUser, setActualUser] = useState();\n\nif (user) {\n  // User is signed in, see docs for a list of available properties\n  // https://firebase.google.com/docs/reference/js/firebase.User\n  // ...\n  setActualUser(user);\n\n  const { currentUser } = actualUser;\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    ></Route>\n  );\n} else {\n  // No user is signed in.\n}\n\n  \n}\n"]},"metadata":{},"sourceType":"module"}